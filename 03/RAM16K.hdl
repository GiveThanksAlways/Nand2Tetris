// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
    
    DMux8Way(in=load,sel=address[11..13] ,a=al,b=bl,c=cl ,d=dl ,e=el ,f=fl ,g=gl ,h=hl );
    
    RAM4K(in=in ,load=al ,address=address[0..11] ,out=outa ); 
    RAM4K(in=in ,load=bl ,address=address[0..11] ,out=outb ); 
    RAM4K(in=in ,load=cl ,address=address[0..11] ,out=outc ); 
    RAM4K(in=in ,load=dl ,address=address[0..11] ,out=outd );
    
    RAM4K(in=in ,load=el ,address=address[0..11] ,out=oute ); 
    RAM4K(in=in ,load=fl ,address=address[0..11] ,out=outf ); 
    RAM4K(in=in ,load=gl ,address=address[0..11] ,out=outg ); 
    RAM4K(in=in ,load=hl ,address=address[0..11] ,out=outh ); 
    
    Mux8Way16(a=outa ,b=outb ,c=outc ,d=outd ,e=oute ,f=outf ,g=outg ,h=outh ,sel=address[11..13] ,out=out );
    
}